export declare enum messages {
    compilationComplete = "Webpack compilation complete.",
    startWatching = "Webpack compilation complete. Watching for file changes.",
    changeDetected = "File change detected. Starting incremental webpack compilation..."
}
/**
 * This little plugin will report the webpack state through the console.
 * So the {N} CLI can get some idea when compilation completes.
 */
export declare class WatchStateLoggerPlugin {
    isRunningWatching: boolean;
    apply(compiler: any): void;
    /**
     * Rewrite an errored chunk to make the hot module replace successful.
     * @param compiler the webpack compiler
     * @param emittedFiles the emitted files from the current compilation
     */
    private static rewriteHotUpdateChunk;
    private static findHotUpdateChunk;
    /**
     * Gets only the modules object after 'webpackHotUpdate("bundle",' in the chunk
     */
    private static getModulesObjectFromChunk;
    /**
     * Checks if there's a file in the following pattern 5e0326f3bb50f9f26cf0.hot-update.json
     * if yes this is a HMR update and remove all bundle files as we don't need them to be synced,
     * but only the update chunks
     */
    static getUpdatedEmittedFiles(emittedFiles: any): any;
    /**
     * Gets the webpackHotUpdate call with updated modules not to include the ones with errors
     */
    private static getWebpackHotUpdateReplacementContent;
    /**
     * Parse the filename of the hot update chunk.
     * @param name bundle.deccb264c01d6d42416c.hot-update.js
     * @returns { name: string, hash: string } { name: 'bundle', hash: 'deccb264c01d6d42416c' }
     */
    private static parseHotUpdateChunkName;
}
